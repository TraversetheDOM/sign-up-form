{"mappings":"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","sources":["src/js/validation.js"],"sourcesContent":["// Making use of object-oriented programming and the constraint validation API \n\nclass FormComponent {\n  #form = document.querySelector('form'); \n\n  constructor() {\n    this.#form.addEventListener('submit', this.#submitForm.bind(this));   \n    Password.eyeIcon.addEventListener('click', this.#showPassword); \n  }\n\n\n  #showPassword(evtObj) {\n    const isShowing = evtObj.target.getAttribute('data-password-visible') === 'true' || false; \n\n    evtObj.target.dataset.passwordVisible = `${!isShowing}`; \n\n    if(isShowing) {\n      evtObj.target.textContent = 'visibility'; \n      Password.input.setAttribute('type', 'password'); \n    }else {\n      evtObj.target.textContent = 'visibility_off'; \n      Password.input.setAttribute('type', 'text'); \n    }\n  }\n\n  #submitForm(evtObj) {\n    if(this.#validateInputs()) {\n      FirstName.resetErrorMessageAndIndicator(); \n      LastName.resetErrorMessageAndIndicator(); \n      Email.resetErrorMessageAndIndicator(); \n      Password.resetErrorMessageAndIndicator(); \n    } else {\n      evtObj.preventDefault();  \n      FirstName.checkInputValidity(); \n      LastName.checkInputValidity(); \n      Email.checkInputValidity(); \n      Password.checkInputValidity(); \n    }\n  }\n\n  #validateInputs() {\n    const isValid = FirstName.valid() && Email.input.validity.valid && LastName.valid() && Password.valid(); \n\n    return isValid; \n  }\n}\n\n\nclass FirstName {\n  static input = document.querySelector(\"[id='firstname']\"); \n  static errorMessage = document.querySelector('.firstname-error-message'); \n\n  static valid() {\n    const isValid = FirstName.input.validity.valueMissing || FirstName.input.validity.patternMismatch || FirstName.input.value.trim() === ''; \n\n    return !isValid; \n  }\n\n  static resetErrorMessageAndIndicator() {\n    FirstName.errorMessage.textContent = \"\"; \n    FirstName.input.className = \"\"; \n    FirstName.input.nextElementSibling.className = \"icon-error__hide\"; \n  }\n\n  static showErrorMessageAndIndicator() {\n    if(FirstName.input.validity.valueMissing || FirstName.input.value.trim() === '') {\n      FirstName.errorMessage.textContent = \"First Name cannot be empty\"; \n    }\n\n    if(FirstName.input.validity.patternMismatch) {\n      FirstName.errorMessage.textContent = \"First Name must be between 1 and 20 characters\"; \n    }\n\n    FirstName.input.className = \"error\"; \n    FirstName.input.nextElementSibling.className = \"icon-error__show\"; \n  }\n\n  static checkInputValidity() {\n    if(FirstName.valid()) {\n      FirstName.resetErrorMessageAndIndicator(); \n    }else {\n      FirstName.showErrorMessageAndIndicator(); \n    }\n  }\n}\n\nclass LastName {\n  static input = document.querySelector(\"[id='lastname']\"); \n  static errorMessage = document.querySelector('.lastname-error-message'); \n\n  static valid() {\n    const isValid = LastName.input.validity.valueMissing || LastName.input.validity.patternMismatch || LastName.input.value.trim() === ''; \n\n    return !isValid; \n  }\n\n  static resetErrorMessageAndIndicator() {\n    LastName.errorMessage.textContent = \"\"; \n    LastName.input.className = \"\"; \n    LastName.input.nextElementSibling.className = \"icon-error__hide\"; \n  }\n\n  static showErrorMessageAndIndicator() {\n    if(LastName.input.validity.valueMissing || LastName.input.value.trim() === \"\") {\n      LastName.errorMessage.textContent = \"Last Name cannot be empty\"; \n    }\n\n    if(LastName.input.validity.patternMismatch) {\n      LastName.errorMessage.textContent = \"Last Name must be between 1 and 20 characters\";\n    }\n\n    LastName.input.className = \"error\"; \n    LastName.input.nextElementSibling.className = \"icon-error__show\"; \n  }\n\n  static checkInputValidity() {\n    if(LastName.valid()) {\n      LastName.resetErrorMessageAndIndicator(); \n    }else {\n      LastName.showErrorMessageAndIndicator(); \n    }\n  }\n}\n\nclass Email {\n  static input = document.querySelector(\"[id='mail']\"); \n  static errorMessage = document.querySelector('.email-error-message'); \n\n  static resetErrorMessageAndIndicator() {\n    Email.errorMessage.textContent = \"\"; \n    Email.input.className = \"\"; \n    Email.input.nextElementSibling.className = \"icon-error__hide\"; \n  }\n\n  static showErrorMessageAndIndicator() {\n    if(Email.input.validity.valueMissing) {\n      Email.errorMessage.textContent = \"Email cannot be empty\";\n    }\n\n    if(Email.input.validity.typeMismatch) {\n      Email.errorMessage.textContent = \"Looks like this is not an email\"; \n      Email.input.classList.add('error-value'); \n    }\n\n    Email.input.classList.add('error'); \n    Email.input.nextElementSibling.className = \"icon-error__show\";\n  }\n\n  static checkInputValidity() {\n    if(Email.input.checkValidity()) {\n      Email.resetErrorMessageAndIndicator(); \n    }else {\n      Email.showErrorMessageAndIndicator(); \n    }\n  }\n}\n\nclass Password {\n  static input = document.querySelector(\"[id=password]\"); \n  static errorMessage = document.querySelector('.password-error-message'); \n  static eyeIcon = document.querySelector('.material-symbols-outlined'); \n\n  static valid() {\n    const isValid = Password.input.validity.valueMissing || Password.input.validity.tooShort || Password.input.value.trim() === \"\"; \n\n    return !isValid; \n  }\n\n  static resetErrorMessageAndIndicator() {\n    Password.errorMessage.textContent = \"\"; \n    Password.input.className = \"\"; \n    Password.input.nextElementSibling.className = \"icon-error__hide\"; \n  }\n\n  static showErrorMessageAndIndicator() {\n    if(Password.input.validity.valueMissing || Password.input.value.trim() === \"\") {\n      Password.errorMessage.textContent = \"Password cannot be empty\"; \n    }\n\n    if(Password.input.validity.tooShort) {\n      Password.errorMessage.textContent = \"Password must be at least 7 characters long\"; \n    }\n\n    Password.input.className = \"error\";\n    Password.input.nextElementSibling.className = \"icon-error__show\";\n\n  }\n\n  static checkInputValidity() {\n    if(Password.valid()) {\n      Password.resetErrorMessageAndIndicator(); \n    } else {\n      Password.showErrorMessageAndIndicator(); \n    }\n  }\n}\n\nnew FormComponent(); \n\n\n"],"names":["$02ce986543bbe7fc$var$FirstName","static","document","querySelector","input","validity","valueMissing","patternMismatch","value","trim","errorMessage","textContent","className","nextElementSibling","valid","resetErrorMessageAndIndicator","showErrorMessageAndIndicator","$02ce986543bbe7fc$var$LastName","$02ce986543bbe7fc$var$Email","typeMismatch","classList","add","checkValidity","$02ce986543bbe7fc$var$Password","tooShort","form","constructor","this","addEventListener","submitForm","bind","eyeIcon","showPassword","evtObj","isShowing","target","getAttribute","dataset","passwordVisible","setAttribute","evtObj1","validateInputs","preventDefault","checkInputValidity"],"version":3,"file":"index.ce6105df.js.map"}